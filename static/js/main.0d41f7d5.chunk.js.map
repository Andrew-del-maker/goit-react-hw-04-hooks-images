{"version":3,"sources":["Services/pixabayApi.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["fetchImage","name","page","fetch","Button","styled","button","Input","input","attrs","props","type","size","Searchbar","onSubmit","useState","searchQuerry","setSearchQuery","className","event","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","placeholder","onChange","currentTarget","value","toLowerCase","ImageGalleryItem","searchPicture","onClick","src","previewURL","alt","tags","largeImageURL","shortid","require","ImageGallery","searchPictures","map","pic","generate","ButtonComponent","onLoadMore","App","color","height","width","timeout","Component","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","target","Btn","setPage","hits","setHits","loading","setLoading","showModal","setShowModal","modalImg","setModalImg","api","then","res","json","prevState","scrollTo","top","body","scrollHeight","behavior","finally","onModal","console","log","dataset","img","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d41f7d5.chunk.js","sourcesContent":["const KEY = '21893197-6d6aad5e906c416c50a626e1f';\nfunction fetchImage(name, page) {\n    return fetch(`https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12\n`)\n}\n\nexport default fetchImage;","import { useState } from \"react\";\nimport { toast } from 'react-toastify'\nimport styled from \"styled-components\";\nimport './Seachbar.scss'\nimport PropTypes from 'prop-types';\n\n\nconst Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  display: block;\n`;\n\nconst Input = styled.input.attrs(props => ({\n  type: \"text\",\n  size: props.size || \"1em\",\n}))`\n  border: 2px solid palevioletred;\n  margin: ${props => props.size};\n  padding: ${props => props.size};\n`;\n\n\nfunction Searchbar({onSubmit}) {\n    const [searchQuerry, setSearchQuery] = useState('');\n\n    \n    const handleSearchChange = event => {\n        setSearchQuery( event.currentTarget.value.toLowerCase() );\n    };\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        if (searchQuerry.trim() === '') {\n            toast('enter search param', {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n            return;\n        }\n        onSubmit(searchQuerry);\n        setSearchQuery('');\n    }\n    \n        \n        return (\n\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\n                    <Button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                    </Button>\n\n                    <Input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    \n                    \n                    placeholder=\"Search images and photos\"\n                    onChange={handleSearchChange}\n                    />\n                </form>\n            </header>\n        )\n    \n}\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\nexport default Searchbar;","import './ImageGalleryItem.scss';\nimport PropTypes from 'prop-types';\n\n\nfunction ImageGalleryItem ({searchPicture, onClick}){\n    \n    \n        return <li  className=\"ImageGalleryItem\" onClick={onClick}>\n                <img src={searchPicture.previewURL} alt={searchPicture.tags} className=\"ImageGalleryItem-image\" data-img={searchPicture.largeImageURL}></img>\n            </li>\n        \n    \n}\n\nImageGalleryItem.propTypes = {\n    searchPicture: PropTypes.any,\n    onClick: PropTypes.func.isRequired,\n}\nexport default ImageGalleryItem;","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport './ImageGallery.scss'\nvar shortid = require('shortid');\n\n\nfunction ImageGallery({searchPictures, onClick}){\n \n   \n        return <ul className=\"ImageGallery\">\n            \n            {searchPictures&& searchPictures.map(pic =>\n                <ImageGalleryItem key={shortid.generate()} searchPicture={pic} onClick={onClick}/>)}\n            \n        </ul>\n            \n    \n}\n\nImageGallery.propTypes = {\n    searchPictures: PropTypes.array,\n    onClick: PropTypes.func.isRequired,\n}\nexport default ImageGallery;","import './Button.scss';\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  display: block;\n`;\n\nfunction ButtonComponent ({onLoadMore}) {\n       \n  \n        return (\n            <Button type='button' className='btn' onClick={onLoadMore}>\n            Load more\n        </Button>\n        )\n    \n}\n\nButtonComponent.propTypes = {\n    onLoadMore: PropTypes.func.isRequired,\n}\n\nexport default ButtonComponent;","import Loader from \"react-loader-spinner\";\nimport { Component } from \"react\";\nexport default class App extends Component {\n  \n  render() {\n    return (\n      <Loader\n        type=\"Circles\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} \n      />\n    );\n  }\n}","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from 'prop-types';\nimport './modal.scss'\n\nconst modalRoot = document.querySelector('#modal-root');\nfunction Modal({ onClose, children }) {\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown)\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown)\n\n        };\n    });\n\n    const handleKeyDown = e => {\n         if (e.code === 'Escape') {\n                onClose();\n         }\n    }\n    const onOverlayClick = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    }\n   \n        return createPortal (\n            <div className=\"Overlay\" onClick={onOverlayClick}>\n             <div className=\"Modal\">\n                {children}\n             </div>\n            </div>, modalRoot\n\n        )\n    \n}\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n}\nexport default Modal;","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss'\nimport styled from \"styled-components\";\nimport api from './Services/pixabayApi'\n\n\n\nimport Searchbar from \"./Components/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport Button from \"./Components/Button\";\nimport Loader from \"./Components/Loader\";\nimport Modal from \"./Components/Modal\";\n\n\n\n\nconst Btn = styled.button`\n  display: inline-block;\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n  display: block;\n`;\n\nfunction App (){\n  const [searchQuerry, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [hits, setHits] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImg, setModalImg] = useState(null);\n  \n\n  useEffect(() => {\n\n    if (searchQuerry==='') {\n      return;\n    }\n    setLoading(true);\n    \n    api(searchQuerry, page)\n      .then(res=>res.json())\n      .then(searchPictures => setHits(prevState=>[...prevState,...searchPictures.hits]))\n        .then(() => {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n        .finally(setLoading(false))\n      \n      \n  }, [searchQuerry, page]);\n\n  \n    \n  const onSubmit = (searchQuerry) => {\n    setSearchQuery(searchQuerry);\n    setHits([]);\n  }\n  const onClickModal = (e) => {\n    onModal();\n    setModalImg(e.target)\n  }\n  const onModal = () => {\n    setShowModal(!showModal);\n  }\n   console.log(showModal)\n    return (\n      <div>\n        <Searchbar onSubmit={onSubmit} />\n        {loading&&<Loader/>}\n        <ImageGallery searchPictures={hits} onClick={onClickModal}/>\n        {searchQuerry &&\n          <Button onLoadMore={()=> setPage(prevState=>prevState+1)} />}\n        {showModal && <Modal onClose={onModal}>\n                <img src={modalImg.dataset.img} alt={modalImg.alt} />\n                <Btn className=\"closeIcon\" type=\"button\" onClick={onModal}>X</Btn>\n            </Modal>}\n        <ToastContainer />\n      </div>\n    )\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}